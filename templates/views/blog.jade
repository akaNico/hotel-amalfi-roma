extends ../layouts/homepage

mixin post(post)
	.post(data-ks-editable=editable(user, { list: 'Post', id: post.id }))
		if post.heroImage.exists
			.gallery-image.img-rounded
				.gallery-image-content
					div
						a(href='/'+[getLocale(req)]+'/blog/post/' + post.slug)
							img(src=post._.heroImage.fit(900,900))
		h3.text-uppercase: a(href='/'+[getLocale(req)]+'/blog/post/' + post.slug)= post.title
		p.lead.text-muted 
			if post.author
				| #{__("by")} &nbsp;
				span= post.author.name.first
			if post.publishedDate
				| #{__("on")} &nbsp;
				span= post._.publishedDate.format('MMMM Do, YYYY')
			if post.categories && post.categories.length
				| in 
				each cat, i in post.categories
					a(href='/'+[getLocale(req)]+'/blog/' + cat.key)= cat.name
					if i < post.categories.length - 1
						| , 
					else
						|  
		p!= post.content.brief
		if post.content.extended
			p.read-more: a(href='/'+[getLocale(req)]+'/blog/post/' + post.slug) #{__("Read more...")}

block header
	#header.header
		.background
			div(style="background-image:url('" + data.page.headerImage.url + "')" )
				.background-filter
					.header-content
						.header-row-logo
							.header-logo
								a(href='/'+[getLocale(req)]+'/'): img.img-responsive(src='/images/logo-white.png')
						.header-row-title
							.header-title.text-center
								h1.text-uppercase #{data.page.title[getLocale(req)]}
								.container-fluid
									.row
										.col-xs-5.col-sm-5.col-md-5.col-lg-5
										.col-xs-2.col-sm-2.col-md-2.col-lg-2
										.col-xs-5.col-sm-5.col-md-5.col-lg-5
								h2.text-uppercase #{data.page.subTitle[getLocale(req)]}
		//-- end header

block content
	.container-fluid.blog: .row
		.col-sm-3.col-md-3
			include ../layouts/partials/newsletter

		.col-sm-6.col-md-6.blog-content
			if filters.category && !data.category
				h3.text-muted #{__("Invalid Category.")}
			else
				if data.posts.results.length
					//- if data.posts.totalPages > 1
					//-	h4.text-weight-normal Showing 
					//-		strong #{data.posts.first}
					//-		|  to 
					//-		strong #{data.posts.last}
					//-		|  of 
					//-		strong #{data.posts.total}
					//-		|  posts.
					//- else
					//-	h4.text-weight-normal Showing #{utils.plural(data.posts.results.length, '* post')}.
					.blog-item
						each post in data.posts.results
							+post(post)

					if data.posts.totalPages > 1
						ul.pagination
							if data.posts.previous
								li: a(href='?page=' + data.posts.previous): span.glyphicon.glyphicon-chevron-left
							else
								li.disabled: a(href='?page=' + 1): span.glyphicon.glyphicon-chevron-left
							each p, i in data.posts.pages
								li(class=data.posts.currentPage == p ? 'active' : null)
									a(href='?page=' + (p == '...' ? (i ? data.posts.totalPages : 1) : p ))= p
							if data.posts.next
								li: a(href='?page=' + data.posts.next): span.glyphicon.glyphicon-chevron-right
							else
								li.disabled: a(href='?page=' + data.posts.totalPages): span.entypo.glyphicon.glyphicon-chevron-right
				else
					if data.category
						h3.text-muted There are no posts in the category #{data.category.name}.
					else
						h3.text-muted There are no posts yet.

		if data.categories.length
			.col-sm-3.col-md-3
				h3.text-uppercase #{__("Categories")}
				ul.category-group
					li.text-uppercase
						i.fa.fa-angle-double-right(aria-hidden="true")
						a(href='/'+[getLocale(req)]+'/blog', class=!data.category ? 'active' : false) #{__("All Categories")}
					each cat in data.categories
						li.text-uppercase
							i.fa.fa-angle-double-right(aria-hidden="true")
							a(href='/'+[getLocale(req)]+'/blog/' + cat.key, class=data.category && data.category.id == cat.id ? 'active' : false)= __(cat.name)
